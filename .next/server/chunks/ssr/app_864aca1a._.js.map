{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/elena.volovicheva/Documents/elena-private-workspace/abc/app/elements/Card.tsx"],"sourcesContent":["export const CardLight = ({\n  children,\n  className,\n}: {\n  children: React.ReactNode;\n  className?: string;\n}) => {\n  return (\n    <div\n      className={`relative w-fit h-fit rounded-xl bg-gradient-to-br from-blue-100 to-indigo-200 shadow-2xl p-10 min-w-[60vw] ${\n        className || \"\"\n      }`}\n    >\n      {children}\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;;AAAO,MAAM,YAAY,CAAC,EACxB,QAAQ,EACR,SAAS,EAIV;IACC,qBACE,8OAAC;QACC,WAAW,CAAC,2GAA2G,EACrH,aAAa,IACb;kBAED;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///Users/elena.volovicheva/Documents/elena-private-workspace/abc/app/icons/LoudspeakerIcon.tsx"],"sourcesContent":["import React from \"react\";\n\n// Loudspeaker Icon SVG Component\nconst LoudspeakerIcon = ({ className }: { className?: string }) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    fill=\"currentColor\"\n    className={className || \"w-6 h-6\"}\n  >\n    <path d=\"M13.5 4.06c0-1.336-1.616-2.005-2.56-1.06l-4.5 4.5H4.508c-1.141 0-2.318.664-2.66 1.903A9.7 9.7 0 0 0 1.5 12c0 .898.121 1.768.35 2.597.343 1.24 1.518 1.903 2.66 1.903h1.932l4.5 4.5c.944.945 2.56.276 2.56-1.06V4.06ZM18.584 12c0-1.857-.87-3.555-2.25-4.685a.75.75 0 0 0-.916 1.192A2.99 2.99 0 0 1 16.084 12a2.99 2.99 0 0 1-1.666 2.493.75.75 0 0 0 .916 1.192C17.714 15.555 18.584 13.857 18.584 12Z\" />\n    <path d=\"M19.816 7.192a.75.75 0 0 0-1.06 1.06A5.502 5.502 0 0 1 21.084 12a5.502 5.502 0 0 1-2.328 3.748.75.75 0 1 0 1.06 1.06A6.993 6.993 0 0 0 22.584 12a6.993 6.993 0 0 0-2.768-4.808Z\" />\n  </svg>\n);\n\nexport default LoudspeakerIcon;\n"],"names":[],"mappings":";;;;;AAEA,iCAAiC;AACjC,MAAM,kBAAkB,CAAC,EAAE,SAAS,EAA0B,iBAC5D,8OAAC;QACC,OAAM;QACN,SAAQ;QACR,MAAK;QACL,WAAW,aAAa;;0BAExB,8OAAC;gBAAK,GAAE;;;;;;0BACR,8OAAC;gBAAK,GAAE;;;;;;;;;;;;uCAIG","debugId":null}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":["file:///Users/elena.volovicheva/Documents/elena-private-workspace/abc/app/elements/ButtonIcon.tsx"],"sourcesContent":["import React from \"react\";\n\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  icon?: React.ComponentType<{ className?: string }>; // Icon is a component type that accepts className\n  // You can add more props to customize icon styles if needed, e.g., iconSize, iconColor\n}\n\nexport const ButtonIcon: React.FC<ButtonProps> = ({\n  icon: IconComponent, // Renaming prop for clarity\n  className, // For custom styling of the button element itself\n  ...props\n}) => {\n  // Define the classes for the icon and its wrapper as seen in your InstructionButton\n  const iconWrapperClasses =\n    \"flex items-center justify-center bg-gradient-to-br from-amber-400 to-amber-600 rounded-full p-1 shadow-md/20\";\n  const iconClasses = \"w-8 h-8 fill-white drop-shadow-md/20\"; // Default classes for the icon\n\n  return (\n    <button\n      className={`py-3 px-3 flex items-center gap-2 shadow-lg/20 text-purple-300 bg-gradient-to-br from-purple-400 to-purple-600 hover:bg-gradient-to-r hover:from-purple-500 hover:to-purple-700 rounded-full focus:outline-none transition-colors ${\n        className || \"\"\n      }`}\n      {...props}\n    >\n      {IconComponent && (\n        <div className={iconWrapperClasses}>\n          <IconComponent className={iconClasses} />\n        </div>\n      )}\n    </button>\n  );\n};\n\n// Example of how to use this Button component:\n// import LoudspeakerIcon from '../icons/LoudspeakerIcon';\n//\n// const MyPageComponent = () => {\n//   return (\n//     <Button\n//       text=\"My Action\"\n//       icon={LoudspeakerIcon}\n//       onClick={() => console.log('Button clicked!')}\n//     />\n//   );\n// };\n"],"names":[],"mappings":";;;;;AAOO,MAAM,aAAoC,CAAC,EAChD,MAAM,aAAa,EACnB,SAAS,EACT,GAAG,OACJ;IACC,oFAAoF;IACpF,MAAM,qBACJ;IACF,MAAM,cAAc,wCAAwC,+BAA+B;IAE3F,qBACE,8OAAC;QACC,WAAW,CAAC,kOAAkO,EAC5O,aAAa,IACb;QACD,GAAG,KAAK;kBAER,+BACC,8OAAC;YAAI,WAAW;sBACd,cAAA,8OAAC;gBAAc,WAAW;;;;;;;;;;;;;;;;AAKpC,GAEA,+CAA+C;CAC/C,0DAA0D;CAC1D,EAAE;CACF,kCAAkC;CAClC,aAAa;CACb,cAAc;CACd,yBAAyB;CACzB,+BAA+B;CAC/B,uDAAuD;CACvD,SAAS;CACT,OAAO;CACP,KAAK","debugId":null}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":["file:///Users/elena.volovicheva/Documents/elena-private-workspace/abc/app/elements/InstructionButton.tsx"],"sourcesContent":["import { useRef } from \"react\";\nimport LoudspeakerIcon from \"../icons/LoudspeakerIcon\";\nimport { ButtonIcon } from \"./ButtonIcon\";\n\nexport const InstructionButton = ({\n  instructions,\n}: {\n  instructions: string;\n}) => {\n  const instructionUtteranceRef = useRef<SpeechSynthesisUtterance | null>(null);\n\n  const playInstructions = () => {\n    if (typeof window !== \"undefined\" && window.speechSynthesis) {\n      window.speechSynthesis.cancel();\n      const utterance = new SpeechSynthesisUtterance(instructions);\n      instructionUtteranceRef.current = utterance;\n      const voices = window.speechSynthesis.getVoices();\n      let preferredVoice = voices.find(\n        (v) => v.lang === \"en-US\" && v.name.toLowerCase().includes(\"female\")\n      );\n      if (!preferredVoice)\n        preferredVoice = voices.find((v) => v.lang === \"en-US\");\n      if (!preferredVoice)\n        preferredVoice = voices.find((v) => v.lang.startsWith(\"en\"));\n      if (preferredVoice) utterance.voice = preferredVoice;\n      utterance.pitch = 1;\n      utterance.rate = 1;\n      utterance.onend = () => {\n        instructionUtteranceRef.current = null;\n      };\n      utterance.onerror = () => {\n        instructionUtteranceRef.current = null;\n      };\n      window.speechSynthesis.speak(utterance);\n    }\n  };\n\n  return (\n    <ButtonIcon\n      onClick={playInstructions}\n      icon={LoudspeakerIcon}\n      title=\"Play Instructions\"\n    />\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAEO,MAAM,oBAAoB,CAAC,EAChC,YAAY,EAGb;IACC,MAAM,0BAA0B,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAmC;IAExE,MAAM,mBAAmB;QACvB,uCAA6D;;QAsB7D;IACF;IAEA,qBACE,8OAAC,8HAAA,CAAA,aAAU;QACT,SAAS;QACT,MAAM,gIAAA,CAAA,UAAe;QACrB,OAAM;;;;;;AAGZ","debugId":null}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":["file:///Users/elena.volovicheva/Documents/elena-private-workspace/abc/app/elements/HeadlineInstruction.tsx"],"sourcesContent":["import React from \"react\";\nimport { InstructionButton } from \"./InstructionButton\";\n\ninterface HeadlineInstructionProps {\n  headlineText: string;\n  instructionText?: string; // Optional: for the button\n  children?: React.ReactNode;\n  className?: string; // Allow passing additional classes to the main div\n}\n\nexport const HeadlineInstruction: React.FC<HeadlineInstructionProps> = ({\n  headlineText,\n  instructionText,\n  children,\n  className,\n}) => {\n  return (\n    <div className={`w-full flex gap-3 items-center mb-4 ${className || \"\"}`}>\n      <h1 className=\"text-3xl md:text-4xl font-bold text-sky-950\">\n        {headlineText}\n      </h1>\n      {instructionText && (\n        <div>\n          {\" \"}\n          {/* Added margin bottom to match original h1 margin if button is present */}\n          <InstructionButton instructions={instructionText} />\n        </div>\n      )}\n      {children}\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;AACA;;;AASO,MAAM,sBAA0D,CAAC,EACtE,YAAY,EACZ,eAAe,EACf,QAAQ,EACR,SAAS,EACV;IACC,qBACE,8OAAC;QAAI,WAAW,CAAC,oCAAoC,EAAE,aAAa,IAAI;;0BACtE,8OAAC;gBAAG,WAAU;0BACX;;;;;;YAEF,iCACC,8OAAC;;oBACE;kCAED,8OAAC,qIAAA,CAAA,oBAAiB;wBAAC,cAAc;;;;;;;;;;;;YAGpC;;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":["file:///Users/elena.volovicheva/Documents/elena-private-workspace/abc/app/components/gameBoards/GameBoardGreaterOrLess.tsx"],"sourcesContent":["\"use client\";\n\nimport React from \"react\";\nimport { CardLight } from \"../../elements/Card\";\nimport { HeadlineInstruction } from \"../../elements/HeadlineInstruction\";\n\nconst GameBoardGreaterOrLess: React.FC = () => {\n  return (\n    <div className=\"h-full w-full flex flex-col items-center justify-center relative\">\n      <HeadlineInstruction\n        headlineText=\"Greater or Less?\"\n        instructionText=\"Game content coming soon!\"\n      />\n      <CardLight>\n        <div className=\"p-8\">\n          <p className=\"text-2xl text-center\">Greater or Less Game Board</p>\n          <p className=\"text-center mt-4\">This game is under construction.</p>\n        </div>\n      </CardLight>\n    </div>\n  );\n};\n\nexport default GameBoardGreaterOrLess;\n"],"names":[],"mappings":";;;;AAGA;AACA;AAJA;;;;AAMA,MAAM,yBAAmC;IACvC,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,uIAAA,CAAA,sBAAmB;gBAClB,cAAa;gBACb,iBAAgB;;;;;;0BAElB,8OAAC,wHAAA,CAAA,YAAS;0BACR,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAE,WAAU;sCAAuB;;;;;;sCACpC,8OAAC;4BAAE,WAAU;sCAAmB;;;;;;;;;;;;;;;;;;;;;;;AAK1C;uCAEe","debugId":null}},
    {"offset": {"line": 266, "column": 0}, "map": {"version":3,"sources":["file:///Users/elena.volovicheva/Documents/elena-private-workspace/abc/app/games/greater-or-less/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React from \"react\";\nimport GameBoardGreaterOrLess from \"../../components/gameBoards/GameBoardGreaterOrLess\";\n// import BackgroundSpace from \"../../components/BackgroundSpace\"; // Temporarily removed\n\nconst GreaterOrLessPage: React.FC = () => {\n  return (\n    <main className=\"h-screen w-screen overflow-hidden flex items-center bg-white justify-center relative\">\n      {/* <BackgroundSpace /> */}\n      <div className=\"z-10\">\n        <GameBoardGreaterOrLess />\n      </div>\n    </main>\n  );\n};\n\nexport default GreaterOrLessPage;\n"],"names":[],"mappings":";;;;AAGA;AAHA;;;AAIA,yFAAyF;AAEzF,MAAM,oBAA8B;IAClC,qBACE,8OAAC;QAAK,WAAU;kBAEd,cAAA,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC,0JAAA,CAAA,UAAsB;;;;;;;;;;;;;;;AAI/B;uCAEe","debugId":null}}]
}