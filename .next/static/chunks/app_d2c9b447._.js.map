{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/elena.volovicheva/Documents/elena-private-workspace/abc/app/components/elements/Card.tsx"],"sourcesContent":["export const CardLight = ({ children }: { children: React.ReactNode }) => {\n  return (\n    <div className=\"relative w-fit h-full rounded-xl bg-gradient-to-br from-blue-100 to-indigo-200 shadow-2xl p-10\">\n      {children}\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;;AAAO,MAAM,YAAY,CAAC,EAAE,QAAQ,EAAiC;IACnE,qBACE,6LAAC;QAAI,WAAU;kBACZ;;;;;;AAGP;KANa","debugId":null}},
    {"offset": {"line": 34, "column": 0}, "map": {"version":3,"sources":["file:///Users/elena.volovicheva/Documents/elena-private-workspace/abc/app/components/icons/LoudspeakerIcon.tsx"],"sourcesContent":["import React from \"react\";\n\n// Loudspeaker Icon SVG Component\nconst LoudspeakerIcon = ({ className }: { className?: string }) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    fill=\"currentColor\"\n    className={className || \"w-6 h-6\"}\n  >\n    <path d=\"M13.5 4.06c0-1.336-1.616-2.005-2.56-1.06l-4.5 4.5H4.508c-1.141 0-2.318.664-2.66 1.903A9.7 9.7 0 0 0 1.5 12c0 .898.121 1.768.35 2.597.343 1.24 1.518 1.903 2.66 1.903h1.932l4.5 4.5c.944.945 2.56.276 2.56-1.06V4.06ZM18.584 12c0-1.857-.87-3.555-2.25-4.685a.75.75 0 0 0-.916 1.192A2.99 2.99 0 0 1 16.084 12a2.99 2.99 0 0 1-1.666 2.493.75.75 0 0 0 .916 1.192C17.714 15.555 18.584 13.857 18.584 12Z\" />\n    <path d=\"M19.816 7.192a.75.75 0 0 0-1.06 1.06A5.502 5.502 0 0 1 21.084 12a5.502 5.502 0 0 1-2.328 3.748.75.75 0 1 0 1.06 1.06A6.993 6.993 0 0 0 22.584 12a6.993 6.993 0 0 0-2.768-4.808Z\" />\n  </svg>\n);\n\nexport default LoudspeakerIcon;\n"],"names":[],"mappings":";;;;;AAEA,iCAAiC;AACjC,MAAM,kBAAkB,CAAC,EAAE,SAAS,EAA0B,iBAC5D,6LAAC;QACC,OAAM;QACN,SAAQ;QACR,MAAK;QACL,WAAW,aAAa;;0BAExB,6LAAC;gBAAK,GAAE;;;;;;0BACR,6LAAC;gBAAK,GAAE;;;;;;;;;;;;KARN;uCAYS","debugId":null}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file:///Users/elena.volovicheva/Documents/elena-private-workspace/abc/app/components/elements/ButtonIcon.tsx"],"sourcesContent":["import React from \"react\";\n\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  icon?: React.ComponentType<{ className?: string }>; // Icon is a component type that accepts className\n  // You can add more props to customize icon styles if needed, e.g., iconSize, iconColor\n}\n\nexport const ButtonIcon: React.FC<ButtonProps> = ({\n  icon: IconComponent, // Renaming prop for clarity\n  className, // For custom styling of the button element itself\n  ...props\n}) => {\n  // Define the classes for the icon and its wrapper as seen in your InstructionButton\n  const iconWrapperClasses =\n    \"flex items-center justify-center bg-gradient-to-br from-amber-400 to-amber-600 rounded-full p-1 shadow-md/20\";\n  const iconClasses = \"w-8 h-8 fill-white drop-shadow-md/20\"; // Default classes for the icon\n\n  return (\n    <button\n      className={`py-3 px-3 flex items-center gap-2 shadow-lg/20 text-purple-300 bg-gradient-to-br from-purple-400 to-purple-600 hover:bg-gradient-to-r hover:from-purple-500 hover:to-purple-700 rounded-full focus:outline-none transition-colors ${\n        className || \"\"\n      }`}\n      {...props}\n    >\n      {IconComponent && (\n        <div className={iconWrapperClasses}>\n          <IconComponent className={iconClasses} />\n        </div>\n      )}\n    </button>\n  );\n};\n\n// Example of how to use this Button component:\n// import LoudspeakerIcon from '../icons/LoudspeakerIcon';\n//\n// const MyPageComponent = () => {\n//   return (\n//     <Button\n//       text=\"My Action\"\n//       icon={LoudspeakerIcon}\n//       onClick={() => console.log('Button clicked!')}\n//     />\n//   );\n// };\n"],"names":[],"mappings":";;;;;AAOO,MAAM,aAAoC,CAAC,EAChD,MAAM,aAAa,EACnB,SAAS,EACT,GAAG,OACJ;IACC,oFAAoF;IACpF,MAAM,qBACJ;IACF,MAAM,cAAc,wCAAwC,+BAA+B;IAE3F,qBACE,6LAAC;QACC,WAAW,CAAC,kOAAkO,EAC5O,aAAa,IACb;QACD,GAAG,KAAK;kBAER,+BACC,6LAAC;YAAI,WAAW;sBACd,cAAA,6LAAC;gBAAc,WAAW;;;;;;;;;;;;;;;;AAKpC,GAEA,+CAA+C;CAC/C,0DAA0D;CAC1D,EAAE;CACF,kCAAkC;CAClC,aAAa;CACb,cAAc;CACd,yBAAyB;CACzB,+BAA+B;CAC/B,uDAAuD;CACvD,SAAS;CACT,OAAO;CACP,KAAK;KArCQ","debugId":null}},
    {"offset": {"line": 134, "column": 0}, "map": {"version":3,"sources":["file:///Users/elena.volovicheva/Documents/elena-private-workspace/abc/app/components/elements/InstructionButton.tsx"],"sourcesContent":["import { useRef } from \"react\";\nimport LoudspeakerIcon from \"../icons/LoudspeakerIcon\";\nimport { ButtonIcon } from \"./ButtonIcon\";\n\nexport const InstructionButton = ({\n  instructions,\n}: {\n  instructions: string;\n}) => {\n  const instructionUtteranceRef = useRef<SpeechSynthesisUtterance | null>(null);\n\n  const playInstructions = () => {\n    if (typeof window !== \"undefined\" && window.speechSynthesis) {\n      window.speechSynthesis.cancel();\n      const utterance = new SpeechSynthesisUtterance(instructions);\n      instructionUtteranceRef.current = utterance;\n      const voices = window.speechSynthesis.getVoices();\n      let preferredVoice = voices.find(\n        (v) => v.lang === \"en-US\" && v.name.toLowerCase().includes(\"female\")\n      );\n      if (!preferredVoice)\n        preferredVoice = voices.find((v) => v.lang === \"en-US\");\n      if (!preferredVoice)\n        preferredVoice = voices.find((v) => v.lang.startsWith(\"en\"));\n      if (preferredVoice) utterance.voice = preferredVoice;\n      utterance.pitch = 1;\n      utterance.rate = 1;\n      utterance.onend = () => {\n        instructionUtteranceRef.current = null;\n      };\n      utterance.onerror = () => {\n        instructionUtteranceRef.current = null;\n      };\n      window.speechSynthesis.speak(utterance);\n    }\n  };\n\n  return (\n    <ButtonIcon\n      onClick={playInstructions}\n      icon={LoudspeakerIcon}\n      title=\"Play Instructions\"\n    />\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;;AAEO,MAAM,oBAAoB,CAAC,EAChC,YAAY,EAGb;;IACC,MAAM,0BAA0B,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAmC;IAExE,MAAM,mBAAmB;QACvB,IAAI,aAAkB,eAAe,OAAO,eAAe,EAAE;YAC3D,OAAO,eAAe,CAAC,MAAM;YAC7B,MAAM,YAAY,IAAI,yBAAyB;YAC/C,wBAAwB,OAAO,GAAG;YAClC,MAAM,SAAS,OAAO,eAAe,CAAC,SAAS;YAC/C,IAAI,iBAAiB,OAAO,IAAI,CAC9B,CAAC,IAAM,EAAE,IAAI,KAAK,WAAW,EAAE,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;YAE7D,IAAI,CAAC,gBACH,iBAAiB,OAAO,IAAI,CAAC,CAAC,IAAM,EAAE,IAAI,KAAK;YACjD,IAAI,CAAC,gBACH,iBAAiB,OAAO,IAAI,CAAC,CAAC,IAAM,EAAE,IAAI,CAAC,UAAU,CAAC;YACxD,IAAI,gBAAgB,UAAU,KAAK,GAAG;YACtC,UAAU,KAAK,GAAG;YAClB,UAAU,IAAI,GAAG;YACjB,UAAU,KAAK,GAAG;gBAChB,wBAAwB,OAAO,GAAG;YACpC;YACA,UAAU,OAAO,GAAG;gBAClB,wBAAwB,OAAO,GAAG;YACpC;YACA,OAAO,eAAe,CAAC,KAAK,CAAC;QAC/B;IACF;IAEA,qBACE,6LAAC,+IAAA,CAAA,aAAU;QACT,SAAS;QACT,MAAM,iJAAA,CAAA,UAAe;QACrB,OAAM;;;;;;AAGZ;GAxCa;KAAA","debugId":null}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":["file:///Users/elena.volovicheva/Documents/elena-private-workspace/abc/app/components/elements/HeadlineInstruction.tsx"],"sourcesContent":["import React from \"react\";\nimport { InstructionButton } from \"./InstructionButton\";\n\ninterface HeadlineInstructionProps {\n  headlineText: string;\n  instructionText?: string; // Optional: for the button\n  children?: React.ReactNode;\n  className?: string; // Allow passing additional classes to the main div\n}\n\nexport const HeadlineInstruction: React.FC<HeadlineInstructionProps> = ({\n  headlineText,\n  instructionText,\n  children,\n  className,\n}) => {\n  return (\n    <div className={`w-full flex gap-3 items-center ${className || \"\"}`}>\n      <h1 className=\"text-3xl md:text-4xl font-bold text-sky-950 mb-6 md:mb-8\">\n        {headlineText}\n      </h1>\n      {instructionText && (\n        <div className=\"mb-6 md:mb-8\">\n          {\" \"}\n          {/* Added margin bottom to match original h1 margin if button is present */}\n          <InstructionButton instructions={instructionText} />\n        </div>\n      )}\n      {children}\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;AACA;;;AASO,MAAM,sBAA0D,CAAC,EACtE,YAAY,EACZ,eAAe,EACf,QAAQ,EACR,SAAS,EACV;IACC,qBACE,6LAAC;QAAI,WAAW,CAAC,+BAA+B,EAAE,aAAa,IAAI;;0BACjE,6LAAC;gBAAG,WAAU;0BACX;;;;;;YAEF,iCACC,6LAAC;gBAAI,WAAU;;oBACZ;kCAED,6LAAC,sJAAA,CAAA,oBAAiB;wBAAC,cAAc;;;;;;;;;;;;YAGpC;;;;;;;AAGP;KArBa","debugId":null}},
    {"offset": {"line": 249, "column": 0}, "map": {"version":3,"sources":["file:///Users/elena.volovicheva/Documents/elena-private-workspace/abc/app/components/GameBoardPhonics.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { CardLight } from \"./elements/Card\";\nimport { InstructionButton } from \"./elements/InstructionButton\";\nimport { HeadlineInstruction } from \"./elements/HeadlineInstruction\";\n\nconst GameBoardPhonics: React.FC = () => {\n  const letters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\");\n  const [selectedLetter, setSelectedLetter] = useState<string | null>(null);\n  const [isSpeakingPhonic, setIsSpeakingPhonic] = useState(false);\n  const currentAudioRef = useRef<HTMLAudioElement | null>(null);\n\n  useEffect(() => {\n    return () => {\n      if (currentAudioRef.current) {\n        currentAudioRef.current.pause();\n        currentAudioRef.current = null;\n      }\n      if (typeof window !== \"undefined\" && window.speechSynthesis.speaking) {\n        window.speechSynthesis.cancel();\n      }\n    };\n  }, []);\n\n  const playPhonicSound = (letter: string) => {\n    if (typeof window !== \"undefined\" && window.speechSynthesis.speaking) {\n      window.speechSynthesis.cancel(); // Stop instructions if they are speaking\n    }\n    if (isSpeakingPhonic) return;\n\n    setSelectedLetter(letter);\n    setIsSpeakingPhonic(true);\n\n    if (currentAudioRef.current) {\n      currentAudioRef.current.pause();\n      currentAudioRef.current.currentTime = 0;\n    }\n\n    const soundFile = `/sounds/phonics/${letter.toLowerCase()}.m4a`;\n    const audio = new Audio(soundFile);\n    currentAudioRef.current = audio;\n\n    audio.play().catch((error) => {\n      console.error(`Error playing sound ${soundFile}:`, error);\n      setIsSpeakingPhonic(false);\n      setSelectedLetter(null);\n    });\n\n    audio.onended = () => {\n      setIsSpeakingPhonic(false);\n      setSelectedLetter(null);\n      currentAudioRef.current = null;\n    };\n    audio.onerror = (event) => {\n      console.error(`Error with audio element for ${soundFile}:`, event);\n      setIsSpeakingPhonic(false);\n      setSelectedLetter(null);\n      currentAudioRef.current = null;\n    };\n  };\n\n  return (\n    <CardLight>\n      <HeadlineInstruction\n        headlineText=\"Click on the letters to hear how they sound\"\n        className=\"pt-12 md:pt-0\"\n        instructionText=\"Click on the letters to hear how they sound\"\n      />\n      <div className=\"grid grid-cols-4 sm:grid-cols-5 md:grid-cols-6 lg:grid-cols-7 gap-3 md:gap-4\">\n        {letters.map((letter) => (\n          <button\n            key={letter}\n            onClick={() => playPhonicSound(letter)}\n            disabled={isSpeakingPhonic && selectedLetter !== letter}\n            className={`\n                p-3 md:p-4 aspect-square flex flex-row items-center justify-center\n                text-4xl md:text-4xl font-bold rounded-lg\n                transition-all duration-150 ease-in-out\n                focus:outline-none focus:ring-4\n                ${\n                  selectedLetter === letter && isSpeakingPhonic\n                    ? \"bg-violet-800 text-sky-950 ring-violet-600 animate-pulse\"\n                    : \"bg-rose-500 hover:bg-rose-700 text-sky-950 focus:ring-rose-600\"\n                }\n                ${\n                  isSpeakingPhonic && selectedLetter !== letter\n                    ? \"opacity-50 cursor-not-allowed\"\n                    : \"\"\n                }\n              `}\n          >\n            <span className=\"flex items-end\">{letter}</span>\n            <span className=\"ml-1\">{letter.toLowerCase()}</span>\n          </button>\n        ))}\n      </div>\n    </CardLight>\n  );\n};\n\nexport default GameBoardPhonics;\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;;;AALA;;;;AAOA,MAAM,mBAA6B;;IACjC,MAAM,UAAU,6BAA6B,KAAK,CAAC;IACnD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IACpE,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzD,MAAM,kBAAkB,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAA2B;IAExD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;sCAAE;YACR;8CAAO;oBACL,IAAI,gBAAgB,OAAO,EAAE;wBAC3B,gBAAgB,OAAO,CAAC,KAAK;wBAC7B,gBAAgB,OAAO,GAAG;oBAC5B;oBACA,IAAI,aAAkB,eAAe,OAAO,eAAe,CAAC,QAAQ,EAAE;wBACpE,OAAO,eAAe,CAAC,MAAM;oBAC/B;gBACF;;QACF;qCAAG,EAAE;IAEL,MAAM,kBAAkB,CAAC;QACvB,IAAI,aAAkB,eAAe,OAAO,eAAe,CAAC,QAAQ,EAAE;YACpE,OAAO,eAAe,CAAC,MAAM,IAAI,yCAAyC;QAC5E;QACA,IAAI,kBAAkB;QAEtB,kBAAkB;QAClB,oBAAoB;QAEpB,IAAI,gBAAgB,OAAO,EAAE;YAC3B,gBAAgB,OAAO,CAAC,KAAK;YAC7B,gBAAgB,OAAO,CAAC,WAAW,GAAG;QACxC;QAEA,MAAM,YAAY,CAAC,gBAAgB,EAAE,OAAO,WAAW,GAAG,IAAI,CAAC;QAC/D,MAAM,QAAQ,IAAI,MAAM;QACxB,gBAAgB,OAAO,GAAG;QAE1B,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC;YAClB,QAAQ,KAAK,CAAC,CAAC,oBAAoB,EAAE,UAAU,CAAC,CAAC,EAAE;YACnD,oBAAoB;YACpB,kBAAkB;QACpB;QAEA,MAAM,OAAO,GAAG;YACd,oBAAoB;YACpB,kBAAkB;YAClB,gBAAgB,OAAO,GAAG;QAC5B;QACA,MAAM,OAAO,GAAG,CAAC;YACf,QAAQ,KAAK,CAAC,CAAC,6BAA6B,EAAE,UAAU,CAAC,CAAC,EAAE;YAC5D,oBAAoB;YACpB,kBAAkB;YAClB,gBAAgB,OAAO,GAAG;QAC5B;IACF;IAEA,qBACE,6LAAC,yIAAA,CAAA,YAAS;;0BACR,6LAAC,wJAAA,CAAA,sBAAmB;gBAClB,cAAa;gBACb,WAAU;gBACV,iBAAgB;;;;;;0BAElB,6LAAC;gBAAI,WAAU;0BACZ,QAAQ,GAAG,CAAC,CAAC,uBACZ,6LAAC;wBAEC,SAAS,IAAM,gBAAgB;wBAC/B,UAAU,oBAAoB,mBAAmB;wBACjD,WAAW,CAAC;;;;;gBAKR,EACE,mBAAmB,UAAU,mBACzB,6DACA,iEACL;gBACD,EACE,oBAAoB,mBAAmB,SACnC,kCACA,GACL;cACH,CAAC;;0CAEH,6LAAC;gCAAK,WAAU;0CAAkB;;;;;;0CAClC,6LAAC;gCAAK,WAAU;0CAAQ,OAAO,WAAW;;;;;;;uBArBrC;;;;;;;;;;;;;;;;AA2BjB;GA5FM;KAAA;uCA8FS","debugId":null}},
    {"offset": {"line": 387, "column": 0}, "map": {"version":3,"sources":["file:///Users/elena.volovicheva/Documents/elena-private-workspace/abc/app/phonics/page.tsx"],"sourcesContent":["\"use client\";\n\nimport GameBoardPhonics from \"@/app/components/GameBoardPhonics\";\n\nexport default function PhonicsGamePage() {\n  return (\n    <main className=\"flex min-h-screen flex-col items-center justify-center bg-white p-4\">\n      <GameBoardPhonics />\n    </main>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIe,SAAS;IACtB,qBACE,6LAAC;QAAK,WAAU;kBACd,cAAA,6LAAC,yIAAA,CAAA,UAAgB;;;;;;;;;;AAGvB;KANwB","debugId":null}}]
}